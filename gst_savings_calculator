#! /usr/bin/python
import argparse
import datetime


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--miss', type=float, default=0.0, help='number of paychecks that will be missed for this period')
    parser.add_argument('--rate', type=float, required=True, help='hourly pay rate')
    parser.add_argument('--hours', type=float, default=50.0, help='expected hours per week')
    args = parser.parse_args()

    # get the GST period start and end dates based on the current date
    today = datetime.date.today()
    if today.month <= 3:
        start = datetime.date(today.year - 1, 10, 1)
        end = datetime.date(today.year, 3, 31)
    elif today.month >= 10:
        start = datetime.date(today.year, 10, 1)
        end = datetime.date(today.year + 1, 3, 31)
    else:
        start = datetime.date(today.year, 3, 31)
        end = datetime.date(today.year, 10, 1)

    print('start: {}'.format(start))
    print('end: {}'.format(end))

    # offset the start time to the next Wednesday
    if start.weekday() < 2:
        start = start + datetime.timedelta(days=(2 - start.weekday()))
    elif start.weekday() > 2:
        start = start + datetime.timedelta(days=(7 - start.weekday() + 2))

    # offset the end time to the last Wednesday
    if end.weekday() < 2:
        end = end - datetime.timedelta(days=(end.weekday() + 6))
    elif end.weekday() > 2:
        end = end - datetime.timedelta(days=(end.weekday() - 2))

    print('offset start: {}'.format(start))
    print('offset end: {}'.format(end))
    paydays = ((end - start).days // 7) + 1
    print('raw paydays: {}'.format(paydays))
    paydays -= args.miss
    print('paydays: {}'.format(paydays))

    total_hours = float(paydays) * args.hours
    print('hours: {}'.format(total_hours))
    total_pay = total_hours * args.rate
    print('pay: {}'.format(total_pay))
    gst = total_pay * 0.15
    print('gst: {}'.format(gst))
    print('per-month gst: {}'.format(gst / 6.0))


if __name__ == '__main__':
    main()
